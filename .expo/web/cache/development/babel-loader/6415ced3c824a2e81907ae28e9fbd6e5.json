{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initState = {\n  subtotal: 0,\n  tax: 0,\n  total: 0\n};\n\nvar totalAmtReducer = function totalAmtReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"UPDATE_TOTAL\":\n      return _objectSpread({}, action.payload);\n\n    case \"RESET_TOTAL\":\n      return _objectSpread({}, initState);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default totalAmtReducer;","map":{"version":3,"sources":["/Users/ampong/Documents/GitHub/MOBILE-APP_NATIVE/app/redux/reducers/totalAmtReducer.js"],"names":["initState","subtotal","tax","total","totalAmtReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,IAAMA,SAAS,GAAG;AAAEC,EAAAA,QAAQ,EAAE,CAAZ;AAAeC,EAAAA,GAAG,EAAE,CAApB;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAAlB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAXM,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,+BAAYD,MAAM,CAACE,OAAnB;;AACF,SAAK,aAAL;AACE,+BAAYR,SAAZ;;AACF;AACE,+BAAYK,KAAZ;AANJ;AAQD,CATD;;AAWA,eAAeD,eAAf","sourcesContent":["const initState = { subtotal: 0, tax: 0, total: 0 };\r\n\r\nconst totalAmtReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_TOTAL\":\r\n      return { ...action.payload };\r\n    case \"RESET_TOTAL\":\r\n      return { ...initState };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default totalAmtReducer;\r\n"]},"metadata":{},"sourceType":"module"}